swagger: "2.0"
info:
  title: Loomade varjupaik
  version: 1.0.0
  description: ""
host: "localhost:3000"
basePath: /
schemes:
  - http
paths:
  /reservedpets:
    post:
      produces:
        - application/json
      parameters:
        - name: body
          schema:
            type: object
            properties:
              sessionId:
                example: any
          in: body
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json:
              id: 1
              name: Nurr
              sex: male
              species: cat
              img: "http://localhost:3000/public/img/cat-1.jpg"
              bookedBy: ""
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'Insufficient permissions' }"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'Something went wrong! Pet not found' }"
      description: ""
  "/pets/edit/{id}":
    patch:
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          schema:
            type: object
            properties:
              name:
                example: any
              sex:
                example: any
              species:
                example: any
              img:
                example: any
              bookedBy:
                example: any
              sessionId:
                example: any
          in: body
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json:
              id: 1
              name: Nurr
              sex: male
              species: cat
              img: "http://localhost:3000/public/img/cat-1.jpg"
              bookedBy: ""
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'SessionId does not have an user associated with it' }"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'Invalid sessionId' }"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'Something went wrong! Pet not found' }"
      description: ""
  /pets:
    post:
      produces:
        - application/json
      parameters:
        - name: body
          schema:
            $ref: "#/definitions/pets"
          in: body
          required: true
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json:
              id: 1
              name: Nurr
              sex: male
              species: cat
              img: "http://localhost:3000/public/img/cat-1.jpg"
              bookedBy: ""
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'You have to login' }"
        "401":
          description: Unauthorized
          examples:
            application/json: "{ error: 'Invalid sessionId' }"
      description: ""
  "/pets/{id}":
    get:
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json:
              id: 1
              name: Nurr
              sex: male
              species: cat
              img: "http://localhost:3000/public/img/cat-1.jpg"
              bookedBy: ""
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'Something went wrong! Pet not found' }"
      description: ""
    delete:
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          schema:
            type: object
            properties:
              sessionId:
                example: any
          in: body
      responses:
        "200":
          description: Return status code 200 with no body
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'Insufficient permissions' }"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'Invalid sessionId' }"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'Something went wrong! Pet not found' "
      description: ""
    patch:
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: body
          schema:
            type: object
            properties:
              id:
                example: any
              sessionId:
                example: any
          in: body
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json:
              id: 1
              name: Nurr
              sex: male
              species: cat
              img: "http://localhost:3000/public/img/cat-1.jpg"
              bookedBy: ""
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json:
              message: >-
                requests body does not contain required fields or required fields are invalid
                format
      description: ""
  /pets/available:
    get:
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json:
              id: 1
              name: Nurr
              sex: male
              species: cat
              img: "http://localhost:3000/public/img/cat-1.jpg"
              bookedBy: ""
      description: ""
  /users:
    post:
      produces:
        - application/json
      parameters:
        - name: body
          schema:
            type: object
            properties:
              username:
                example: any
              password:
                example: any
          in: body
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/users"
          examples:
            application/json: "{ error: 'One or all params are missing' }"
        "409":
          description: Conflict
          schema:
            $ref: "#/definitions/users"
          examples:
            application/json: "{ error: 'Conflict: The user already exists. ' }"
      description: ""
  /sessions:
    post:
      produces:
        - application/json
      parameters:
        - name: body
          schema:
            type: object
            properties:
              username:
                example: any
              password:
                example: any
          in: body
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ sessionId: sessions.length }"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'One or all params are missing' }"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/pets"
          examples:
            application/json: "{ error: 'Unauthorized: username or password is incorrect' }"
      description: ""
    delete:
      parameters:
        - name: body
          schema:
            type: object
            properties:
              sessionId:
                example: any
          in: body
      responses:
        "200":
          description: OK
      description: ""
definitions:
  users:
    title: Root Type for users
    description: Login creadentials
    type: object
    properties:
      id:
        format: int32
        type: integer
      username:
        type: string
      password:
        type: string
      isAdmin:
        type: string
    example:
      id: 1
      username: Admin
      password: Password
      isAdmin: "true"
  pets:
    title: Root Type for pets
    description: reserved pets
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      sex:
        type: string
      species:
        type: string
      img:
        type: string
      bookedBy:
        type: string
    example:
      id: 1
      name: Nurr
      sex: male
      species: cat
      img: "http://localhost:3000/public/img/cat-1.jpg"
      bookedBy: ""
